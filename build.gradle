import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'de.undercouch.download' version '4.0.4'
}

group = project.property('pluginGroup')
version = project.property('pluginVersion')
sourceCompatibility = project.property('sourceVersion')

repositories {
    mavenCentral()
    maven {
        name 'spigot'
        url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name 'paper'
        url 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name 'vault'
        url 'https://jitpack.io'
    }
    maven {
        name 'essentials'
        url 'https://ci.ender.zone/plugin/repository/everything'
    }
    maven {
        name 'votifier'
        url 'http://repo.howaner.de'
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compileOnly group: 'org.spigotmc', name: 'spigot-api', version: project.property('apiVersion')
    compileOnly group: 'com.github.MilkBowl', name: 'VaultAPI', version: '1.7'
    compileOnly group: 'net.ess3', name: 'EssentialsX', version: '2.17.1'
    compileOnly group: 'com.vexsoftware', name: 'votifier', version: '1.9'
}

jar {
    actions.clear()
    dependsOn('shadowJar')
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version]
    }
}

// Test server environment setup

def paperJar = new File('server', 'paper.jar')

task downloadPaperJar(type: Download) {
    if (paperJar.exists()) {
        enabled = false
    } else {
        src project.property('paperUrl')
        dest paperJar
    }
}

task copyPlugin(dependsOn: ['build'], type: Copy) {
    from "${buildDir}/libs"
    into 'server/plugins'
}

task startDevServer(dependsOn: ['downloadPaperJar', 'copyPlugin'], type: JavaExec) {
    classpath = files('server/paper.jar')
    workingDir = 'server'
    standardInput = System.in
    args '--nogui'
}
